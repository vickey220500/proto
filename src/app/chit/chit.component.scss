.chit-container {
  padding: 20px;
  max-width: 1200px;
  margin: 0 auto;
  min-height: 100vh;
  background: linear-gradient(135deg, #f5f7fa 0%, #c3cfe2 100%);
}

.chit-card {
  border-radius: 16px;
  box-shadow: 0 8px 32px rgba(0, 0, 0, 0.1);
  background: rgba(255, 255, 255, 0.95);
  backdrop-filter: blur(10px);
  border: 1px solid rgba(255, 255, 255, 0.2);
  overflow: hidden;
}

mat-card-header {
  background: linear-gradient(135deg, #9a6735 0%, #b8860b 100%);
  color: white;
  padding: 24px;
  margin: -16px -16px 0 -16px;
}

mat-card-title {
  display: flex;
  align-items: center;
  gap: 12px;
  font-size: 24px;
  font-weight: 600;
  margin: 0;
}

.title-icon {
  font-size: 28px;
  width: 28px;
  height: 28px;
}

mat-card-subtitle {
  color: rgba(255, 255, 255, 0.9);
  margin: 8px 0 0 0;
  font-size: 14px;
}

mat-card-content {
  padding: 32px 24px;
}

.step-content {
  margin-bottom: 24px;
}

.form-row {
  display: flex;
  gap: 20px;
  margin-bottom: 20px;
  flex-wrap: wrap;
}

.form-field {
  flex: 1;
  min-width: 250px;
}

.full-width {
  flex: 100%;
}

mat-form-field {
  width: 100%;
}

.step-actions {
  display: flex;
  justify-content: flex-end;
  gap: 12px;
  padding-top: 20px;
  border-top: 1px solid #e0e0e0;
}

.card-actions {
  display: flex;
  justify-content: flex-end;
  padding: 16px 24px;
  background: #f8f9fa;
  margin: 0 -16px -16px -16px;
}

// Stepper customization
::ng-deep .mat-stepper-horizontal {
  background: transparent;
}

::ng-deep .mat-step-header {
  border-radius: 8px;
  margin: 0 4px;
  transition: all 0.3s ease;
}

::ng-deep .mat-step-header:hover {
  background: rgba(154, 103, 53, 0.1);
}

::ng-deep .mat-step-header.mat-step-header-ripple {
  background: rgba(154, 103, 53, 0.1);
}

::ng-deep .mat-step-header.mat-step-header-ripple.mat-step-header-selected {
  background: rgba(154, 103, 53, 0.2);
}

::ng-deep .mat-step-icon {
  background: #9a6735;
  color: white;
}

::ng-deep .mat-step-icon-selected {
  background: #b8860b;
}

::ng-deep .mat-step-icon-state-done {
  background: #4caf50;
}

// Button styling
button[mat-raised-button] {
  background: linear-gradient(135deg, #9a6735 0%, #b8860b 100%);
  color: white;
  border-radius: 8px;
  padding: 8px 24px;
  font-weight: 500;
  transition: all 0.3s ease;
}

button[mat-raised-button]:hover {
  transform: translateY(-2px);
  box-shadow: 0 4px 12px rgba(154, 103, 53, 0.3);
}

button[mat-button] {
  border-radius: 8px;
  padding: 8px 16px;
  transition: all 0.3s ease;
}

button[mat-button]:hover {
  background: rgba(154, 103, 53, 0.1);
}

// Form field styling
::ng-deep .mat-form-field-appearance-outline .mat-form-field-outline {
  color: #9a6735;
}

::ng-deep .mat-form-field-appearance-outline.mat-focused .mat-form-field-outline-thick {
  color: #b8860b;
}

::ng-deep .mat-form-field-label {
  color: #666;
}

::ng-deep .mat-form-field.mat-focused .mat-form-field-label {
  color: #9a6735;
}

// Responsive design
@media (max-width: 768px) {
  .chit-container {
    padding: 10px;
  }
  
  .form-row {
    flex-direction: column;
    gap: 16px;
  }
  
  .form-field {
    min-width: 100%;
  }
  
  mat-card-title {
    font-size: 20px;
  }
  
  .title-icon {
    font-size: 24px;
    width: 24px;
    height: 24px;
  }
  
  .step-actions {
    flex-direction: column;
    gap: 8px;
  }
  
  .step-actions button {
    width: 100%;
  }
}

@media (max-width: 480px) {
  mat-card-content {
    padding: 20px 16px;
  }
  
  mat-card-header {
    padding: 16px;
  }
  
  .card-actions {
    padding: 12px 16px;
  }
}

// Animation for form fields
.form-field {
  animation: fadeInUp 0.5s ease-out;
}

@keyframes fadeInUp {
  from {
    opacity: 0;
    transform: translateY(20px);
  }
  to {
    opacity: 1;
    transform: translateY(0);
  }
}

// Success state styling
.form-field.ng-valid {
  animation: validField 0.3s ease-out;
}

@keyframes validField {
  0% {
    transform: scale(1);
  }
  50% {
    transform: scale(1.02);
  }
  100% {
    transform: scale(1);
  }
}

// Error state styling
.form-field.ng-invalid.ng-touched {
  animation: invalidField 0.3s ease-out;
}

@keyframes invalidField {
  0%, 100% {
    transform: translateX(0);
  }
  25% {
    transform: translateX(-5px);
  }
  75% {
    transform: translateX(5px);
  }
} 